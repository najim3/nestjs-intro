> Nest -h
> Nest generate -h
> --dry-run : just simulate the command and after simulating if we happy thenâ€¦
> nest generate module users       // create users module by cli
> put method is used whenever you want to completely replace a resouce by something
and patch is used whenever you want to only change a parts of resouce that already esits.

> nest generate controller users --no-spec --dry-run  // disable spec file generartion
> i would always suggest you use the entire params and then validate those params.
>  what is pipes
> if the value is not convertible into an integer, or the client
passes a type of a value, that is not possible to be converted into an integer, this throws
a bad request error, so it offers you a transformation as well as validation hand in hand.
> all the parse...pipe are used in required params and so cannot validate an optonal param.
> only ValidationPipe and DefaultValuePipe where you need to use the new keyword.
> https://github.com/typestack/class-validator?tab=readme-ov-file
> npm i class-validator@0.14.1
> password: @Matches(/^(?=.*[A-Za-z])(?=.*\d)(?=.*[@$!%*#?&])[A-Za-z\d@$!%*#?&]{8,}$/)
> we can add this kind of (message) a configuration object to any of these decorators, 
and use a customized message.